#!/bin/awk -f
# Modified from https://github.com/AladW/aurutils/blob/master/lib/aur-graph
# Now lists all dependices

/pkgbase/ {
    pkgbase = $3
    pkgver  = ""

    # track both the pkgbases themselves and their number of deps
    dep_counts[pkgbase] = 0
}

/^\t(make|check)?depends/ {
    pkg_deps[pkgbase, ++dep_counts[pkgbase]] = $3 # versioned
}

/pkgname/ {
    pkg_map[$3] = pkgbase # node
    ver_map[$3] = pkgver  # weight
}

/^\tprovides/ {
    split($3, prov, "=")

    # if provider is unversioned, use pkgver
    if ("2" in prov)
        ver_map[prov[1]] = prov[2]
    else
        ver_map[prov[1]] = pkgver

    # append node
    pkg_map[prov[1]] = pkgbase
}

END {
    for (pkgbase in dep_counts) {
        # add a loop to isolated nodes (#402)
        # printf("%s\t%s\n", pkgbase, pkgbase)

        for (dep = 1; dep <= dep_counts[pkgbase]; dep++) {
            dep_op = "-" # unversioned / no comparison

            # valid operators (important: <= before <)
            split("<=|>=|<|=|>", cmp, "|")

            # split: fourth argument is gawk extension
            for (i in cmp) {
                split(pkg_deps[pkgbase, dep], dep_split, cmp[i])

                if ("2" in dep_split) {
                    dep_op = cmp[i]
                    break
                }
            }

            if ("1" in dep_split)
                dep_pkgname = dep_split[1]
            else
                exit 2

            if ("2" in dep_split)
                dep_pkgver = dep_split[2]
            else
                dep_pkgver = "-"

            printf("%s\n", dep_pkgname)
        }
    }
}
